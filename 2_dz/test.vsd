$date
	Mon Dec 18 01:39:43 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module complex_mult_tb $end
$var wire 2 ! data_valid_out [1:0] $end
$var wire 16 " Re_out [15:0] $end
$var wire 16 # Im_out [15:0] $end
$var reg 8 $ Im_in_1 [7:0] $end
$var reg 8 % Im_in_2 [7:0] $end
$var reg 8 & Re_in_1 [7:0] $end
$var reg 8 ' Re_in_2 [7:0] $end
$var reg 1 ( clk $end
$var reg 2 ) data_valid_in [1:0] $end
$scope module dut $end
$var wire 8 * Im_in_1 [7:0] $end
$var wire 8 + Im_in_2 [7:0] $end
$var wire 16 , Im_out [15:0] $end
$var wire 8 - Re_in_1 [7:0] $end
$var wire 8 . Re_in_2 [7:0] $end
$var wire 16 / Re_out [15:0] $end
$var wire 1 ( clk $end
$var wire 2 0 data_valid_in [1:0] $end
$var wire 2 1 data_valid_out [1:0] $end
$var reg 8 2 a [7:0] $end
$var reg 8 3 b [7:0] $end
$var reg 8 4 c [7:0] $end
$var reg 4 5 cnt [3:0] $end
$var reg 8 6 d [7:0] $end
$var reg 2 7 data_good_out [1:0] $end
$var reg 2 8 flag [1:0] $end
$var reg 16 9 k1 [15:0] $end
$var reg 16 : k2 [15:0] $end
$var reg 16 ; k3 [15:0] $end
$var reg 8 < operand1 [7:0] $end
$var reg 8 = operand2 [7:0] $end
$var reg 16 > result [15:0] $end
$var reg 3 ? state [2:0] $end
$var reg 16 @ x [15:0] $end
$var reg 16 A y [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b1 0
b0 /
b11 .
b11 -
b0 ,
b1 +
b1 *
b1 )
0(
b11 '
b11 &
b1 %
b1 $
b0 #
b0 "
b0 !
$end
#5
b1 8
b1 ?
b1 6
b11 4
b1 3
b11 2
1(
#10
b0 %
b0 +
b0 '
b0 .
b0 $
b0 *
b0 &
b0 -
b0 )
b0 0
0(
#15
b10 ?
b11111110 =
b11 <
1(
#20
0(
#25
b1111111111111010 >
b11 ?
b10 =
b1 <
1(
#30
b1 )
b1 0
b1 %
b1 +
b10 '
b10 .
b1 $
b1 *
b10 &
b10 -
0(
#35
b1 5
b100 =
b11 <
b1111111111111010 9
b1 ?
b10 4
b10 2
b10 >
1(
#40
b0 %
b0 +
b0 '
b0 .
b0 $
b0 *
b0 &
b0 -
b0 )
b0 0
0(
#45
b1100 >
b10 ?
b10 :
b11111111 =
b10 <
1(
#50
0(
#55
b11 ?
b1100 ;
b1 =
b1 <
b1111111111111110 >
1(
#60
b1 )
b1 0
b1 %
b1 +
b1 '
b1 .
b1 $
b1 *
b1 &
b1 -
0(
#65
b1 >
b10 5
b1 !
b1 1
b1 7
b110 #
b110 ,
b110 A
b1000 "
b1000 /
b1000 @
b11 =
b10 <
b1111111111111110 9
b1 ?
b1 4
b1 2
1(
#70
b0 %
b0 +
b0 '
b0 .
b0 $
b0 *
b0 &
b0 -
b0 )
b0 0
0(
#75
b10 ?
b0 !
b0 1
b0 7
b1 :
b0 =
b1 <
b110 >
1(
#80
0(
#85
b0 >
b11 ?
b110 ;
1(
#90
b1 )
b1 0
b10 %
b10 +
b1 '
b1 .
b10 $
b10 *
b1 &
b1 -
0(
#95
b1 !
b1 1
b1 7
b100 #
b100 ,
b100 A
b11 "
b11 /
b11 @
b10 =
b0 9
b1 ?
b10 6
b10 3
1(
#100
b0 %
b0 +
b0 '
b0 .
b0 $
b0 *
b0 &
b0 -
b0 )
b0 0
0(
#105
b10 >
b10 ?
b0 !
b0 1
b0 7
b0 :
b1 =
1(
#110
0(
#115
b11 ?
b10 ;
b11111111 =
b10 <
b1 >
1(
#120
0(
#125
b1111111111111110 >
b1 !
b1 1
b1 7
b0 8
b1 ?
b10 #
b10 ,
b10 A
b0 "
b0 /
b0 @
b1 9
b11 =
b1 <
1(
#130
0(
#135
b10 ?
b0 !
b0 1
b0 7
b1111111111111110 :
b1 =
b11 >
1(
#140
0(
#145
b1 >
b11 ?
b11 ;
b11111111 =
b10 <
1(
#150
0(
#155
b0 5
b1 !
b1 1
b1 7
b0 ?
b100 #
b100 ,
b100 A
b1111111111111101 "
b1111111111111101 /
b1111111111111101 @
b11 =
b1 <
b1111111111111110 >
1(
#160
0(
#165
b11 >
b0 !
b0 1
b0 7
1(
#170
0(
#175
1(
#180
0(
#185
1(
#190
0(
#195
1(
#200
0(
#205
1(
#210
0(
#215
1(
#220
0(
#225
1(
#230
0(
#235
1(
#240
0(
#245
1(
#250
0(
#255
1(
#260
0(
#265
1(
#270
0(
#275
1(
#280
0(
#285
1(
#290
0(
#295
1(
#300
0(
#305
1(
#310
0(
#315
1(
#320
b1 )
b1 0
b10 %
b10 +
b1 '
b1 .
b10 $
b10 *
b1 &
b1 -
0(
#325
b1 8
b11 9
b1 ?
1(
#330
b0 %
b0 +
b0 '
b0 .
b0 $
b0 *
b0 &
b0 -
b0 )
b0 0
0(
#335
b10 ?
b11 :
b1 =
1(
#340
0(
#345
b1 >
b11 ?
b11111111 =
b10 <
1(
#350
0(
#355
b1 5
b0 8
b1 ?
b110 #
b110 ,
b110 A
b0 "
b0 /
b0 @
b1 9
b11 =
b1 <
b1111111111111110 >
1(
#360
0(
#365
b11 >
b10 ?
b1111111111111110 :
b1 =
1(
#370
0(
#375
b11 ?
b11111111 =
b10 <
b1 >
1(
#380
0(
#385
b1111111111111110 >
b0 5
b1 !
b1 1
b1 7
b0 ?
b100 #
b100 ,
b100 A
b1111111111111101 "
b1111111111111101 /
b1111111111111101 @
b11 =
b1 <
1(
#390
0(
#395
b0 !
b0 1
b0 7
b11 >
1(
#400
0(
#405
1(
#410
0(
#415
1(
#420
0(
#425
1(
#430
0(
#435
1(
#440
0(
#445
1(
#450
0(
#455
1(
#460
0(
#465
1(
#470
0(
#475
1(
#480
0(
#485
1(
#490
0(
#495
1(
#500
0(
#505
1(
#510
0(
#515
1(
#520
0(
#525
1(
#530
0(
